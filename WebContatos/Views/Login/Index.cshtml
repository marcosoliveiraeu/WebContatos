@model LoginModel
@{

    Layout = "_LayoutDeslogado";
    ViewData["Title"]= "Login";


}




<div class="container">
   
    <div class="row justify-content-center mt-5">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title text-center">Login</h4>


                    <form asp-controller="Login" asp-action="Entrar" method="post">
                        <div class="form-group">
                            <label for="login">Login:</label>
                            <input type="text" asp-for="Login" class="form-control" id="login" placeholder="Digite o seu login">
                            @Html.ValidationMessageFor(x => x.Login)

                        </div>
                        <div class="form-group">
                            <label for="senha">Senha:</label>
                            <input type="password" asp-for="Senha" class="form-control" id="senha" placeholder="Digite sua senha">
                            @Html.ValidationMessageFor(x => x.Senha)

                        </div>
                        <br />
                        <button type="submit" class="btn btn-primary btn-block">Entrar</button>
                    </form>

                    <br />
                    @if (TempData["MensagemErro"] != null)
                    {
                        <div class="alert alert-danger" role="alert">
                            <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">X</button>
                            @TempData["MensagemErro"]
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>